services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
  mq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build: ./api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://appuser:secret@db:5432/appdb
      PYTHONUNBUFFERED: 1
      MQ_HOST: mq
      MQ_PORT: 5672
      MQ_USER: guest
      MQ_PASSWORD: guest
      DATA_DIR: /var/data
    volumes:
      - ${DATA_DIR:-./data}:/var/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 15
    depends_on:
      mq:
        condition: service_healthy
  flask-app:
    build: ./flask-app
    ports:
      - "8001:8001"
    depends_on:
      api:
        condition: service_healthy
    environment:
      API_URL: http://api:8000
      MQ_HOST: mq
      MQ_PORT: 5672
      MQ_USER: guest
      MQ_PASSWORD: guest
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 10s
      timeout: 5s
      retries: 15
  order-processor:
    build: ./jobs/order_processor
    environment:
      DATABASE_URL: postgresql://appuser:secret@db:5432/appdb
      MQ_HOST: mq
      MQ_PORT: 5672
      MQ_USER: guest
      MQ_PASSWORD: guest
    depends_on:
      mq:
        condition: service_healthy
volumes:
  db_data:
